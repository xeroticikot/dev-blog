{
    "id": 2,
    "title": "Python project ideas",
    "description": "Intermediate level python developers alaways finds it hard to gather awesome project ideas either because of too many client/company works or lack of knowledge. Here are some awesome ideas to start with.",
    "time": "15 min read",
    "date": "30/10/2019",
    "writer": "Mahmud Abdur Rahman",
    "narrator": "",
    "content": "Python has grown to become a popular programming language because of it's extensible modularity, re-usability, short & fast to write code base, strong community, open source libraries and overall easy to learn. In 2018, it was the third most popular language on GitHub, behind JavaScript and Java. According to a programming language popularity survey, it is consistently among the top 10 most mentioned languages in job postings. Furthermore, Python is consistently in the top 10 most popular languages.\n\n    Though Python is easy to learn, but sometimes beginners and even intermediate level developers get suffered & demotivated form lack of coding ideas which stops them from being on the upper/enthusiast level. Now, nothing comes in handy in your development phases if you don't gain enough updated knowledge of uprising technologies and leverage yourself to the higher playgrounds. \n    \n    To boost up our idea base, we may consider the 15 project ideas mentioned, which may give us in-hand code experience with whole lotta knowledge on implementation of modern algorithms and popular python libraries.\n    \n    1. Automated string response\n    This idea motivates the development of an AI library which takes the sentences/strings as input and generates automated responses based on string/pattern matching. Chat bots are very popular nowadays used widely in web services & mobile apps. Here's some libraries for tryouts https://pypi.org/project/chatbotAI/ . \n    https://github.com/santinic/pampy\n    \n    2. Search Engine\n    Search engines give you the proper insights for handling large amount of data. Developing such project will never betray you in terms of gaining knowledge base on big/unorganized data. This link may help you - https://code.djangoproject.com/wiki/searchengine  \n    http://www.connellybarnes.com/code/web_search/\n    \n    In the next four project ideas, I'll try to cover project architecture more than project ideas. Because, sometimes practicing methodologies gives you solutions to major project developments & gives capability to increase generating new ideas. Now, the topic is more in a production level of software architecture known as multi-tenant applications.\n    \n    Multi tenant applications allow you to serve multiple customers with one install of the application. Each customer has their data completely isolated in such an architecture. Each customer is called a tenant.\n    \n    Most modern Software as a Service applications are multi tenant. Whether it is Salesforce, Freshbooks, Zoho or Wordpress, most modern cloud based applications are delivered with a multi-tenant architecture.\n    \n    3. Shared database with shared schema\n    A single database keeps every tenants data. A ForeignKey in the tables identifies the tenant. You may implement this architecture on e-commerce or a guide search project where guides provide their available times & you may book them as you travel around cities/countries.  \n    \n    4. Shared database with isolated schema\n    A single database keeps every tenants data. Each tenants data is in a separate schema within the single database. The schema identifies the tenant and data tabled do no have a FK to the tenant.\n    \n    5. Isolated database with a shared app server\n    Every tenants data is in a separate database. The database identifies the tenant.\n    \n    6. Completely isolated tenants using Docker\n    A new set of docker containers are launched for each tenant. Every tenants data is in a separate database (which may or may not be running in container). A set of containers identifies the tenant.\n    \n    7. REST API development\n    Developing REST API services will give you the capability of maintaining the data flow for cross platform applications attached to your API server. You can focus more on security & data flow management rather than developing look & feel or UI designs. Following links may help you for best practices -\n    https://www.django-rest-framework.org/\n    https://flask-restful.readthedocs.io/en/latest/\n    \n    8. API development with GraphQL\n    In terms of developing API services, REST architecture dominated for a long time, but I believe GraphQL is taking over API developments because of the simplicity & scale ability of architecture for complex systems. Introduced by Facebook, you may gather more info in the following links -\n    https://graphql.org/ \n    https://docs.graphene-python.org/projects/django/en/latest/\n    \n    9. Multi language support\n    Multi-language support is very crucial for web applications. It may give you major pain in future if you don't enable scale ability for other languages. So, it's better to have a clear understanding of multi-language implementation by developing such project to maintain & provide clean architecture with translation libraries. Links below may help you - \n    https://docs.djangoproject.com/en/2.2/topics/i18n/ \n    https://docs.python.org/3/library/gettext.html\n    https://flask-appbuilder.readthedocs.io/en/latest/i18n.html\n    \n    10. Face detection\n    To cope up with uprising AI technologies nowadays, being familiarized with face detection algorithms/python libraries is productive. Bio-metric Identification System, building a face detection model on a video etc may be the ideas for projects. There are some resources below -  \n    https://pypi.org/project/opencv-python/\n    https://github.com/ageitgey/face_recognition\n    \n    11. Playing with CAPTCHA \n    CAPTCHA is an acronym for completely automated public Turing test to tell computers and humans apart. This can be with images / audio or whatever we will see in future. CAPTCHA is used to prevent bots from automatically submitting forms with SPAM or other unwanted content. Google and other companies use it to prevent bots from creating multiple Gmail accounts. Links mentioned below may boost up your development -\n    https://djangopackages.org/grids/g/captcha/\n    https://github.com/mikeyy/nonoCAPTCHA\n    \n    12. CMS (Content Management System)\n    A content management system (CMS) is a software application that can be used to manage the creation and modification of digital content. CMSs are typically used for enterprise content management (ECM) and web content management (WCM). You may start developing your own CMS project with customized features or you may use the following one for quick start -\n    https://www.django-cms.org/en/\n    https://djangopackages.org/grids/g/cms/\n    \n    13. ERP (Enterprise Resource Planning)\n    Enterprise resource planning systems have a host of applications that manage the core business functions in a unified manner. It facilitates seamless task flow in sales, inventory, customer relationship management, human resources, and finance. ERP system consists of many sub-modules like - Finance Management, Supply Chain Management, Inventory Management, CRM, Human Resource etc. Developing these modules one by one & maybe merging them on the same platform may give you business insights of an organization & it's work flow.\n    \n    14. Apps implementing Google Maps API \n    7360 companies reportedly use Google Maps in their tech stacks, including Google, Lyft, Uber and Snapchat. You may develop apps like Emergency doctors around you, location sharing service etc to get a good glimpse of Google Maps API. Featured link may help you - https://pypi.org/project/django-google-maps/\n    \n    15. Game Development\n    If you're tired from being too much engaged in client projects which are basically the same, developing games may give you refreshments & who knows your games may gain popularity if you publish it online. Just like the dinosaur game on Google Chrome Browser! Here's an open source library to build 2D games for entertainment - https://github.com/kitao/pyxel .      \n    \n    I hope above project ideas will help you gain modern, real-time & production level coding experience & knowledge to keep your keep your Python learning curve on a higher playground. Happy coding! "
}